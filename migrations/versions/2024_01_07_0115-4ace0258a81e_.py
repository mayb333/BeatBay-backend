"""Initial migration. Creating tables

Revision ID: 4ace0258a81e
Revises:
Create Date: 2024-01-07 01:15:33.312390

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4ace0258a81e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "role",
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("permissions", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("role_id"),
    )
    op.create_table(
        "user",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("profile_photo", sa.String(), nullable=True),
        sa.Column("registered_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.Column("total_likes", sa.Integer(), nullable=True),
        sa.Column("total_plays", sa.Integer(), nullable=True),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.role_id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "beat",
        sa.Column("beat_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("bpm", sa.Integer(), nullable=False),
        sa.Column("mood", sa.String(), nullable=True),
        sa.Column("genre", sa.String(), nullable=True),
        sa.Column("tags", sa.String(), nullable=True),
        sa.Column("image", sa.String(), nullable=True),
        sa.Column("audio_file", sa.String(), nullable=False),
        sa.Column("added_at", sa.TIMESTAMP(), nullable=True),
        sa.Column("likes_count", sa.Integer(), nullable=False),
        sa.Column("plays_count", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("beat_id"),
    )
    op.create_table(
        "beat_play",
        sa.Column("play_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("beat_id", sa.Integer(), nullable=True),
        sa.Column("played_at", sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(
            ["beat_id"],
            ["beat.beat_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("play_id"),
    )
    op.create_table(
        "cart",
        sa.Column("item_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("beat_id", sa.Integer(), nullable=False),
        sa.Column("added_at", sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(
            ["beat_id"],
            ["beat.beat_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("item_id", "user_id", "beat_id"),
    )
    op.create_table(
        "like",
        sa.Column("like_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("beat_id", sa.Integer(), nullable=False),
        sa.Column("added_at", sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(
            ["beat_id"],
            ["beat.beat_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("like_id", "user_id", "beat_id"),
    )
    op.create_table(
        "purchase_option",
        sa.Column("option_id", sa.Integer(), nullable=False),
        sa.Column("beat_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("formats", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["beat_id"],
            ["beat.beat_id"],
        ),
        sa.PrimaryKeyConstraint("option_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("purchase_option")
    op.drop_table("like")
    op.drop_table("cart")
    op.drop_table("beat_play")
    op.drop_table("beat")
    op.drop_table("user")
    op.drop_table("role")
    # ### end Alembic commands ###
